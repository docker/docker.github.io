#!/usr/bin/env bash

################################################################################
# Docker.Utils created on 2015-10-01 by michaK                                 #
################################################################################
#                       ____             __                                    #
#                      / __ \____  _____/ /_____  _____                        #
#                     / / / / __ \/ ___/ //_/ _ \/ ___/                        #
#                    / /_/ / /_/ / /__/ ,< /  __/ /                            #
#                   /_____/\____/\___/_/|_|\___/_/                             #
#                                                                              #
################################################################################
#                     Environment Tools                                        #
################################################################################

EnvironmentCheckVariable ()
{
  variableName=$1
  hint=$2
  Log "Looking for $variableName in environment"
  env | grep "^$variableName" > /dev/null
  if [ $? -eq 0 ]; then
    eval variableValue=\$$variableName
    Log "$variableName is set to $variableValue"
  else
    LogWarning "Could not find ${variableName} in environment. run this command to install it:\n\n${hint}\n";
    if PromptYesNo 'Would you like to do it now ?'; then
      echo "$hint"
      echo ""
      eval "$hint"
      if [ $? -ne 0 ]; then
        LogError "setting environment variable $variableName failed"
      fi
    else
      LogError "run '$hint' to fix it"
    fi
  fi
  #if [ -z "${variableName}" ];then LogError "${variableName} environment variable not set.Please try:\n${hint}\n"; fi
}

EnvironmentCheckPath ()
{
  directory=$1
  hint=$2
  Log "Looking for $directory in PATH"
  echo $PATH | tr : '\n' | grep $directory > /dev/null
  if [ $? -eq 0 ]; then
    Log "$directory is in PATH"
  else
    LogWarning "Could not find $directory in PATH. run this command to set it:\n\n${hint}\n";
    if PromptYesNo 'Would you like to do it now ?'; then
      echo "$hint"
      echo ""
      eval "$hint"
      if [ $? -ne 0 ]; then
        LogError "setting $directory in PATH failed"
      fi
    else
      LogError "run '$hint' to fix it"
    fi
  fi
}

###############################################################################
#                             Docker specific                                 #
###############################################################################

EnvironmentCheck ()
{
  LogImportant 'Checking Environment...'
  coloredLogs=true
  LogImportant "Running on OSX $scriptPlatformVersion ($scriptArch)"
  EnvironmentCheckVariable  'HOME'                  'echo "HOME variable not set. Aborting"; exit 1'

  export GEM_HOME=$HOME/.gem ## cocapods depends on ruby
  export PATH=$GEM_HOME/bin:$PATH

  EnvironmentCheckGo
  EnvironmentSetOpam

  LogSuccess 'Environment check complete'
}

EnvironmentCheckGo()
{
  EnvironmentCheckVariable  'GOPATH'                "source $SCRIPT_FOLDER_PATH/setenv"
  DependenciesCheckFile     "$GOPATH/src"           'mkdir -p $GOPATH/src'
  DependenciesCheckFile     "$GOPATH/bin"           'mkdir -p $GOPATH/bin'
  DependenciesCheckFile     "$GOPATH/pkg"           'mkdir -p $GOPATH/pkg'
}

EnvironmentSetOpam()
{
  export OPAMROOT="$cacheDirectory/opam"
  export OPAMYES=1
  export OPAMCOLORS=always
}
