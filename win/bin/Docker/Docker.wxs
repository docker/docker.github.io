<?xml version="1.0" encoding="utf-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
  <?define ManufacturerName="--MANUFACTURER--" ?>
  <?define ProductName="--PRODUCTNAME--" ?>
  <?define ProductFullName="Docker for Windows" ?>
  <?define ProductVersion="--PRODUCTVERSION--" ?>
  <?define AssemblyVersion="--ASSEMBLYVERSION--" ?>
  <?define HumanVersion="--HUMANVERSION--" ?>
  <?define ProductDescription="--PRODUCTDESCRIPTION--" ?>
  <?define ManufacturerSupportURL="--SUPPORTURL--" ?>
  <?define WorkingDirectoryId="--WORKINGDIRECTORYID--" ?>
  <?define DockerExecutableName="Docker for Windows" ?>
  <?define UpgradeCode="6E2F3AC9-FBD2-47AC-BDB9-0D8364594C06" ?> 
  <?define Platform="x64" ?>
  <?define Win64 = "yes" ?>
  <?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
  <Product Id="*"
            Name="$(var.ProductName)"
            Language="1033"
            Version="$(var.ProductVersion)"
            Manufacturer="$(var.ManufacturerName)"
            UpgradeCode="$(var.UpgradeCode)">
        <Package Id="*" Description="$(var.ProductDescription)" Comments="--BUILDSHA1--" InstallerVersion="405" Compressed="yes" InstallScope="perMachine" Platform="$(var.Platform)" />

  <Upgrade Id="$(var.UpgradeCode)">
    <UpgradeVersion Property="OLDERVERSION_BEINGUPGRADED" Minimum="0.0.0" Maximum="$(var.ProductVersion)" IncludeMaximum="no" />
    <UpgradeVersion Property="NEWERVERSION_INSTALLED" OnlyDetect="yes" Minimum="$(var.ProductVersion)" IncludeMinimum="no" />
  </Upgrade>
  <InstallExecuteSequence>
    <FindRelatedProducts Before="AppSearch" />
    <AppSearch Before="LaunchConditions" />
    <RemoveExistingProducts After="InstallInitialize" />
  </InstallExecuteSequence>
  <InstallUISequence>
    <FindRelatedProducts Before="AppSearch" />
    <AppSearch Before="LaunchConditions" />
  </InstallUISequence>

  <!--
   FirstInstall: when product is installed for the first time
   Upgrading: when we run upgrade for the installed product
   RemovingForUpgrade: when upgrade removes previous installation
   Uninstalling: when product is being completely unistalled
   Maintenance: configuration maintenance
  -->

  <CustomAction Id="SetFirstInstall" Property="FirstInstall" Value="true" />
  <CustomAction Id="SetUpgrading" Property="Upgrading" Value="true" />
  <CustomAction Id="SetRemovingForUpgrade" Property="RemovingForUpgrade" Value="true" />
  <CustomAction Id="SetUninstalling" Property="Uninstalling" Value="true" />
  <CustomAction Id="SetMaintenance" Property="Maintenance" Value="true" />

  <InstallExecuteSequence>
    <Custom Action="SetFirstInstall" After="FindRelatedProducts">
      NOT Installed
    </Custom>
    <Custom Action="SetUpgrading" After="SetFirstInstall">
      (OLDERVERSION_BEINGUPGRADED OR NEWERVERSION_INSTALLED) AND NOT (REMOVE="ALL")
    </Custom>
    <Custom Action="SetUninstalling" After="SetUpgrading">
      Installed AND (REMOVE="ALL") AND NOT (OLDERVERSION_BEINGUPGRADED OR NEWERVERSION_INSTALLED OR UPGRADINGPRODUCTCODE)
    </Custom>
    <Custom Action="SetMaintenance" After="SetUninstalling">
      Installed AND NOT Upgrading AND NOT Uninstalling AND NOT UPGRADINGPRODUCTCODE
    </Custom>
    <Custom Action="SetRemovingForUpgrade" After="RemoveExistingProducts">
      (REMOVE="ALL") AND UPGRADINGPRODUCTCODE
    </Custom>
  </InstallExecuteSequence>
  <InstallUISequence>
    <Custom Action="SetFirstInstall" After="FindRelatedProducts">
      Not Installed
    </Custom>
    <Custom Action="SetUpgrading" After="SetFirstInstall">
      (OLDERVERSION_BEINGUPGRADED OR NEWERVERSION_INSTALLED) AND NOT (REMOVE="ALL")
    </Custom>
    <Custom Action="SetUninstalling" After="SetUpgrading">
      Installed AND (REMOVE="ALL") AND NOT (OLDERVERSION_BEINGUPGRADED OR NEWERVERSION_INSTALLED OR UPGRADINGPRODUCTCODE)
    </Custom>
    <Custom Action="SetMaintenance" After="SetUninstalling">
      Installed AND NOT Upgrading AND NOT Uninstalling AND NOT UPGRADINGPRODUCTCODE
    </Custom>
  </InstallUISequence>

        <Media Id="1" Cabinet="$(var.ProductName).cab" EmbedCab="yes" />
		<Property Id="INSTALLDESKTOPSHORTCUT" Value="1"/>

        <?include Include\CheckWindowsVersion.wxi ?>

        <Icon Id="icon.ico" SourceFile="--WORKINGDIRECTORY--\Data\icon.ico"/>
        <Property Id="ARPPRODUCTICON" Value="icon.ico" />

        <?include FilesList.wxi ?>

        <Directory Id="TARGETDIR" Name="SourceDir">
            <Directory Id="$(var.PlatformProgramFilesFolder)" Name="PFiles">
                <Directory Name="Docker" Id="$(var.ProductName)RootDir">
<!--                     <Directory Name="$(var.ProductName)" Id="$(var.ProductName)RootDir">
                    </Directory> -->
                </Directory>
            </Directory>
            <Directory Id="ProgramMenuFolder">
                <Directory Id="ProgramMenuDir" Name="$(var.ProductName)">
                    <?define WorkingDirectory="[$(var.ProductName)RootDir]\$(var.ProductName)" ?>
                    <Component Id="StartMenuShortcuts" Guid="C5E42F95-E21B-4B47-B7B0-AFB5FC802961" Win64="$(var.Win64)">
                        <RemoveFolder Id="ProgramMenuDir" On="uninstall" />
                        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\$(var.ProductName)" Type="string" Value="$(var.UpgradeCode)" />
                        <Shortcut Id="UninstallProduct" Name="Uninstall $(var.ProductFullName)" Description="Uninstalls the application" Target="msiexec.exe" Arguments="/x [ProductCode]" />
                        <Shortcut Id="$(var.ProductName)Shortcut" Name="$(var.ProductFullName)" Target="[$(var.ProductName)RootDir]\$(var.ProductName)\$(var.DockerExecutableName).exe" WorkingDirectory="$(var.WorkingDirectoryId)" />
                        <util:InternetShortcut Id="GettingStartedShortcut" Name="Getting Started" Target="https://docs.docker.com/docker-for-windows/" />
                        <util:InternetShortcut Id="CLIReferenceShortcut" Name="CLI Reference" Target="https://docs.docker.com/engine/reference/commandline/cli/" />
                    </Component>
                </Directory>
            </Directory>
      			<Directory Id="DesktopFolder" Name="Desktop"/>
			      <Component Id="DesktopShortcut" Guid="C5E42F95-E21B-4B47-B7B0-AFB5FC802955" Win64="$(var.Win64)">
                <Condition>INSTALLDESKTOPSHORTCUT</Condition>
                <CreateFolder/>
				        <RegistryKey Root="HKCU" Key="Software\$(var.ManufacturerName)\$(var.ProductName)\Install">
					          <RegistryValue Name="DesktopShortcut" Value="1" Type="integer" KeyPath="yes"/>
				        </RegistryKey>
                <Shortcut Id="DockerExecutableDesktopShortcut" Directory="DesktopFolder" Name="$(var.ProductFullName)"
                                Target="[$(var.ProductName)RootDir]\$(var.ProductName)\$(var.DockerExecutableName).exe"
                                WorkingDirectory="$(var.WorkingDirectoryId)" />
			      </Component>
            <Component Id="AddExeInLocalUserRun" Guid="C5E42F95-E21B-4A47-B7B0-AFB5FC801055" Win64="$(var.Win64)">
                <RegistryKey Root="HKCU" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Run">
                    <RegistryValue Name="Docker for Windows" Value="&quot;[$(var.ProductName)RootDir]$(var.ProductName)\$(var.DockerExecutableName).exe&quot;" Type="string"/>
                </RegistryKey>
            </Component>
            <Component Id="AddDockerInLocalMachine" Guid="C5B42F95-E21B-4E47-B7B0-AFB5FC831055" Win64="$(var.Win64)">
                <RegistryKey Root="HKLM" Key="SOFTWARE\Docker Inc.\Docker\1.0">
                    <RegistryValue Name="AppPath" Value="&quot;[$(var.ProductName)RootDir]$(var.ProductName)\$(var.DockerExecutableName).exe&quot;" Type="string"/>
                    <RegistryValue Name="BinPath" Value="&quot;[$(var.ProductName)RootDir]$(var.ProductName)\resources\bin&quot;" Type="string"/>
                    <RegistryValue Name="Version" Value="$(var.AssemblyVersion)" Type="string"/>
                    <RegistryValue Name="HumanVersion" Value="$(var.HumanVersion)" Type="string"/>
                    <RegistryValue Name="UninstallId" Value="[ProductCode]" Type="string"/>
                </RegistryKey>
            </Component>
        </Directory>

        <DirectoryRef Id="$(var.WorkingDirectoryId)">
            <Component Id="InstallDockerService" Guid="B5E42F95-E21B-4B17-97B0-F3B5DC609961" Win64="$(var.Win64)">
                <File Id="com.docker.service" Source="--WORKINGDIRECTORY--\Docker\com.docker.service" KeyPath="yes" ProcessorArchitecture='x64'/>
                    <ServiceInstall Id="ServiceInstaller" 
                        Type="ownProcess" 
                        Vital="yes" 
                        Name="com.docker.service" 
                        DisplayName="Docker for Windows Service" 
                        Description="Run Docker for Windows backend service" 
                        Start="auto" 
                        Account="LocalSystem" 
                        ErrorControl="ignore" 
                        Interactive="no" />
                    <ServiceControl Id="StartService" 
                        Start="install" 
                        Stop="both" 
                        Remove="uninstall" 
                        Name="com.docker.service" 
                        Wait="no" />
            </Component>
        </DirectoryRef>

        <Feature Id="DefaultFeature" Title="$(var.ProductName)" Level="1">
            <ComponentRef Id="StartMenuShortcuts" />
            <ComponentRef Id="DesktopShortcut" />
            <ComponentRef Id="InstallDockerService" />
            <ComponentGroupRef Id="group_$(var.ProductName)" />
        </Feature>

        <Feature Id="AddExeInLocalUserRun"
              Title="Add Docker Launch at User Login"
              AllowAdvertise="no"
              Display="hidden" Level="1">
                <ComponentRef Id="AddExeInLocalUserRun" />
        </Feature>

        <Feature Id="AddDockerInLocalMachine"
              Title="Add Docker In LocalMachine"
              AllowAdvertise="no"
              Display="hidden" Level="1">
                <ComponentRef Id="AddDockerInLocalMachine" />
        </Feature>
        
        <?include Include\AddDockerToPath.wxi ?>

        <Feature Id="MainApplication" Title="Main Application" Level="1">
            <ComponentRef Id="comp_Docker_0" />
        </Feature>

<!-- Docker Uninstall -->
        <CustomAction Id="QtExecDeferredUninstallProperty_Cmd" Property="QtExecDeferredUninstallProperty"
              Value="&quot;[#--INSTALLERCMDID--]&quot; -k -u" Execute="immediate"/>
        <CustomAction Id="QtExecDeferredUninstallProperty" BinaryKey="WixCA" DllEntry="CAQuietExec"
              Execute="deferred" Return="ignore" Impersonate="no"/>
        <InstallExecuteSequence>
            <Custom Action="QtExecDeferredUninstallProperty_Cmd" After="InstallInitialize">Uninstalling</Custom>
            <Custom Action="QtExecDeferredUninstallProperty" Before="RemoveFiles">Uninstalling</Custom>
        </InstallExecuteSequence>

<!-- Docker PrepareUpgrade -->
        <CustomAction Id="QtExecDeferredPrepareUpgradeProperty_Cmd" Property="QtExecDeferredPrepareUpgradeProperty"
              Value="&quot;[#--INSTALLERCMDID--]&quot; -k -p" Execute="immediate"/>
        <CustomAction Id="QtExecDeferredPrepareUpgradeProperty" BinaryKey="WixCA" DllEntry="CAQuietExec"
              Execute="deferred" Return="ignore" Impersonate="no"/>
        <InstallExecuteSequence>
            <Custom Action="QtExecDeferredPrepareUpgradeProperty_Cmd" Before="ProcessComponents">RemovingForUpgrade</Custom>
            <Custom Action="QtExecDeferredPrepareUpgradeProperty" After="ProcessComponents">RemovingForUpgrade</Custom>
        </InstallExecuteSequence>

<!-- Docker FinishUpgrade -->
        <CustomAction Id="QtExecDeferredFinishUpgradeProperty_Cmd" Property="QtExecDeferredFinishUpgradeProperty"
              Value="&quot;[#--INSTALLERCMDID--]&quot; -f" Execute="immediate"/>
        <CustomAction Id="QtExecDeferredFinishUpgradeProperty" BinaryKey="WixCA" DllEntry="CAQuietExec"
              Execute="deferred" Return="ignore" Impersonate="no"/>
        <InstallExecuteSequence>
            <Custom Action="QtExecDeferredFinishUpgradeProperty_Cmd" After="InstallFiles">Upgrading</Custom>
            <Custom Action="QtExecDeferredFinishUpgradeProperty" Before="InstallFinalize">Upgrading</Custom>
        </InstallExecuteSequence>

<!-- Docker Install -->
        <CustomAction Id="QtExecDeferredInstallProperty_Cmd" Property="QtExecDeferredInstallProperty"
              Value="&quot;[#--INSTALLERCMDID--]&quot; -m -i" Execute="immediate"/>
        <CustomAction Id="QtExecDeferredInstallProperty" BinaryKey="WixCA" DllEntry="CAQuietExec"
              Execute="deferred" Return="ignore" Impersonate="no"/>
        <InstallExecuteSequence>
            <Custom Action="QtExecDeferredInstallProperty_Cmd" After="InstallFiles">FirstInstall</Custom>
            <Custom Action="QtExecDeferredInstallProperty" Before="InstallFinalize">FirstInstall</Custom>
        </InstallExecuteSequence>

        <UI>
            <UIRef Id="WixUI_Minimal" />
            <ProgressText Action="QtExecDeferredInstallProperty">Setting up Docker</ProgressText>
            <ProgressText Action="QtExecDeferredPrepareUpgradeProperty">Preparing Docker VM upgrade</ProgressText>
            <ProgressText Action="QtExecDeferredFinishUpgradeProperty">Upgrading Docker</ProgressText>
            <ProgressText Action="QtExecDeferredUninstallProperty">Removing Docker VM</ProgressText>
            <Publish Dialog="ExitDialog" 
                Control="Finish" 
                Event="DoAction" 
                Value="LaunchApplication">WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed</Publish>
        </UI>

        <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX" Value="1"/>
        <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="Launch Docker" />
        <Property Id="WixShellExecTarget" Value="[#--LAUNCHEXECUTABLEID--]" />
        <CustomAction Id="LaunchApplication" 
            BinaryKey="WixCA" 
            DllEntry="WixShellExec"
            Impersonate="yes" />
        <InstallExecuteSequence>
          <Custom Action="LaunchApplication" After="InstallFinalize">LAUNCH_APPLICATION_ON</Custom>
        </InstallExecuteSequence>
    </Product>
</Wix>