var ExtractTextPlugin = require("extract-text-webpack-plugin");
var debug = require('debug')('webpack--common');
var fs = require('fs');
var merge = require('lodash/object/merge');
var cssstats = require('postcss-cssstats');
var loaders = require('./_commonLoaders');

/* Dux Button Config */
var elementButton = require('@dux/element-button/defaults');
var buttons = elementButton.mkButtons([{
  name: 'primary',
  color: '#FFF',
  bg: '#22B8EB'
},{
  name: 'secondary',
  color: '#FFF',
  bg: '#232C37'
},{
  name: 'coral',
  color: '#FFF',
  bg: '#FF85AF'
},{
  name: 'success',
  color: '#FFF',
  bg: '#0FD85A'
},{
  name: 'warning',
  color: '#FFF',
  bg: '#FF8546'
},{
  name: 'yellow',
  color: '#FFF',
  bg: '#FFDE50'
},{
  name: 'alert',
  color: '#FFF',
  bg: '#EB3E46'
}]);
/**
 * cssnaneOpts can be true or an options object
 * 
 * http://cssnano.co/options/
 */
var cssnanoOpts = {
  mergeIdents: false
};
const defaults = merge(require('@dux/element-card/defaults')({
    capBackground: '#f1f6fb',
    borderColor: '#c4cdda'
  }),
  { 
    duxElementButton: {
      radius: '.25rem',
      buttons: buttons
    }
  });
module.exports = {
  resolve: {
    extensions: ['', '.js', '.jsx', '.json'],
    root: [
    '/opt/hub/app/scripts/',
    '/opt/hub/app/scripts/components'
    ]
  },
  module: {
    preLoaders: loaders.preLoaders,
    loaders: loaders.commonLoaders
  },
  postcss: [
    require('postcss-import')(),
    require('postcss-constants')({
      defaults: defaults
    }),
    require('postcss-each'),
    require('postcss-cssnext')({
      browsers: 'last 2 versions',
      features: {
        // https://github.com/robwierzbowski/node-pixrem/issues/40
        rem: false
      }
    }),
    require('postcss-nested'),
    require('lost')({
      gutter: '1.25rem',
      flexbox: 'flex'
    }),
    require('postcss-cssstats')(function(stats) {
      /**
       * this cssstats callback runs for every postcss file
       * perhaps we want to write out this object and
       * record the values over time?
       * 
       * problem: there is no filename here
       */
      debug(stats);
    }),
    require('postcss-url')(),
    require('cssnano')(cssnanoOpts)
  ],
  eslint: {
    failOnError: true
  },
  bail: true,
  profile: true
}
